apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spring-boot-api.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "spring-boot-api.name" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "spring-boot-api.name" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "spring-boot-api.name" . }}
      annotations:
        checksum/configmap: "{{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}"
        checksum/secret: "{{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}"
    spec:
      containers:
        - name: spring-boot-api
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8080
            - containerPort: 8081
            - containerPort: 8082
          args:
            - "--spring.profiles.active"
            - "{{ .Values.activeProfile }}"
          envFrom:
            - secretRef:
                name: {{ include "spring-boot-api.fullname" . }}-secret
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          lifecycle:
            preStop:
              exec:
                command: ["wget", "http://localhost:8080/service/shutdown"]
          volumeMounts:
            - name: config-volume
              mountPath: "/app/config.json"
              subPath: "config.json"
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "spring-boot-api.fullname" . }}-config
            items:
              - key: config.json
                path: config.json
